<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.excilys</groupId>
	<artifactId>computer-database</artifactId>
	<version>8.0</version>
	<packaging>pom</packaging>
	<url>https://github.com/Warlot-PQ/computer-database</url>
	
	<modules>
		<module>cdb-core</module>
		<module>cdb-binding</module>
		<module>cdb-persistence</module>
		<module>cdb-console</module>
		<module>cdb-service</module>
		<module>cdb-webapp</module>
	</modules>

	<properties>	
		<cdb.version>8.0</cdb.version>
		<dbIP>localhost</dbIP>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<cargo-maven2-plugin.version>1.4.19</cargo-maven2-plugin.version>
		<selenium-maven-plugin.version>2.3</selenium-maven-plugin.version>
		<maven-surefire-plugin.version>2.4.3</maven-surefire-plugin.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<javax.servlet.jsp-api.version>2.2.1</javax.servlet.jsp-api.version>
		<mysql-connector-java.version>5.1.39</mysql-connector-java.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<slf4j.version>1.6.1</slf4j.version>
		<logback.version>0.9.26</logback.version>
		<jstl.version>1.2</jstl.version>
		<selenium-java.version>2.28.0</selenium-java.version>
		<selenium-remote-driver.version>2.53.0</selenium-remote-driver.version>
		<selenium-chrome-driver.version>2.45.0</selenium-chrome-driver.version>
		<phantomjsdriver.version>1.2.1</phantomjsdriver.version>
		<jsp-2.1.version>6.0.0</jsp-2.1.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<HikariCP.version>2.4.5</HikariCP.version>
		<mockito-all.version>1.9.5</mockito-all.version>		
		<spring.version>4.1.0.RELEASE</spring.version>
		<tomcat.directory>/home/pqwarlot/apache-tomcat-8.0.33/</tomcat.directory>
		<jta.version>1.1</jta.version>
		<hibernate-validator.version>5.2.4.Final</hibernate-validator.version>
		
		<javax.persistence>2.1.1</javax.persistence>
		<hibernate.version>4.3.9.Final</hibernate.version>
		
		<spring.data.jpa.version>1.3.2.RELEASE</spring.data.jpa.version>
		<querydsl.version>2.8.0</querydsl.version>
		<xml-apis.version>1.4.01</xml-apis.version>
		<tomcatPlugin.version>2.2</tomcatPlugin.version>
		<jersey.version>2.23.1</jersey.version>
		
		<commons.fileupload.version>1.3.1</commons.fileupload.version>
		<commons.io.version>2.4</commons.io.version>
	</properties>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<!-- JDK version -->
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
	
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
	
				<!-- Package as war file -->
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>

				<plugin>  
					<groupId>org.apache.tomcat.maven</groupId>  
					<artifactId>tomcat7-maven-plugin</artifactId>  
					<version>${tomcatPlugin.version}</version>  
					<configuration>
						<url>http://localhost:8080/manager/text</url>
						<server>TomcatServer</server>
						<path>/computer-database</path>
					</configuration>   
				</plugin> 
				
				<!-- start Tomcat server at pre-integration-test, stop it at post-integration-test -->
	
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-maven2-plugin.version}</version>
					<configuration>
						<wait>false</wait>
						<container>
							<containerId>tomcat8x</containerId>
							<type>installed</type>
							<home>${tomcat.directory}</home>
						</container>
					</configuration>
					<executions>
						<execution>
							<id>start-container</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
								<goal>deploy</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-container</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
	
				<!-- start Selenium server at pre-integration-test, stop it at post-integration-test -->
	
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>selenium-maven-plugin</artifactId>
					<version>${selenium-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start-server</goal>
							</goals>
							<configuration>
								<background>true</background>
								<logOutput>true</logOutput>
							</configuration>
						</execution>
						<execution>
							<id>stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop-server</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
	
				<!-- Run unit tests during test phase but exclude the Selenium test classes -->
				<!-- Run the Selenium test classes during the integration-test phase -->
	 
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<junitartifactname>
							org.junit:com.springsource.org.junit
						</junitartifactname>
						<excludes>

							<!-- excluding the test class in the functional tests package during 
								the test phase -->
	
							<exclude>**/selenium/*Test.java</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>

							<!-- Running the tests in the functional tests package during the integration 
								tests phase. -->
	
							<id>integration-tests</id>
							<phase>integration-test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<skip>false</skip>
								<excludes>
									<exclude>none</exclude>
								</excludes>
								<includes>
									<include>**/selenium/*Test.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
	  <repository>
	    <id>99-empty</id>
	    <url>http://version99.qos.ch/</url>
	  </repository>
	</repositories>

	<dependencyManagement> <!-- allow scope and version tag be to inherit in child pom -->
		<dependencies>
			<!-- Inner dependencies -->
		
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-core</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-binding</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-console</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-persistence</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-service</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-webapp</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-rest</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<dependency>
				<groupId>com.excilys</groupId>
				<artifactId>cdb-war</artifactId>
				<version>${cdb.version}</version>
			</dependency>
			
			<!-- Get empty jar instead of commons-logging -->
			
		    <dependency>
		        <groupId>commons-logging</groupId>
		        <artifactId>commons-logging</artifactId>
		        <version>99-empty</version>
		    </dependency>
			
			<!-- SLF4j interface -->
	
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			
			<!-- Servlet -->
		
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
			</dependency>
	
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>${javax.servlet.jsp-api.version}</version>
			</dependency>
	
			<!-- MySql 5.X Connector -->
			
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
				<scope>runtime</scope>
			</dependency>
	
			<!-- jUnit 4.X -->
			
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
	
			<!-- Mockito -->
	
			<dependency>
			    <groupId>org.mockito</groupId>
			    <artifactId>mockito-all</artifactId>
			    <version>${mockito.version}</version>
			</dependency>
		
			<!-- LogBack implementation -->
	
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
	
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
	
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.version}</version>
			</dependency>
			
			<!-- Servlet API -->
	
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
	
			<!-- Integration test -->
	
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium-java.version}</version>
				<scope>test</scope>
			</dependency>
		
		
			<dependency>
	            <groupId>org.seleniumhq.selenium</groupId>
	            <artifactId>selenium-remote-driver</artifactId>
	            <version>${selenium-remote-driver.version}</version>
	        </dependency>
	        
			<dependency>
		      <groupId>org.seleniumhq.selenium</groupId>
		      <artifactId>selenium-chrome-driver</artifactId>
		      <version>${selenium-chrome-driver.version}</version>
		    </dependency>  
	    
			<dependency>
	            <groupId>com.codeborne</groupId>
	            <artifactId>phantomjsdriver</artifactId>
	            <version>${phantomjsdriver.version}</version>
	            <scope>test</scope>
	        </dependency>
		
		
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jsp-2.1</artifactId>
				<version>${jsp-2.1.version}</version>
				<scope>test</scope>
			</dependency>
			
			<!-- Manipulate core classes (e.g. escape HTML string) -->
			
			<dependency>
				<groupId>org.apache.commons</groupId>
				  <artifactId>commons-lang3</artifactId>
				  <version>${commons-lang3.version}</version>
			</dependency>
			
			<!-- Connection pool -->
			<dependency>
			    <groupId>com.zaxxer</groupId>
			    <artifactId>HikariCP</artifactId>
			    <version>${HikariCP.version}</version>
			    <scope>compile</scope>
			</dependency>
			
			<!-- Unit testing using mock object -->
			
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito-all.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-aspects</artifactId>
		        <version>${spring.version}</version>
		    </dependency>
			
			<!-- jdbc transaction manager and Transactional annotation -->
		
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- Implement transaction -->
			
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>
			
			<!-- scope annotation -->
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- Interface to configure JPA within Spring -->
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- SpringBeanAutowiringSupport servlet -->
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- SpringBeanAutowiringSupport servlet -->
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<!-- Unit Test with Spring (e.g. @ContextConfiguration) -->
			
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-test</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<!-- Spring security -->
			
			<dependency>
			    <groupId>org.springframework.security</groupId>
			    <artifactId>spring-security-config</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.springframework.security</groupId>
			    <artifactId>spring-security-core</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.springframework.security</groupId>
			    <artifactId>spring-security-web</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.springframework.security</groupId>
			    <artifactId>spring-security-taglibs</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<!-- JPA persistence provider implementation -->
			
			<dependency>
			    <groupId>org.hibernate</groupId>
			    <artifactId>hibernate-entitymanager</artifactId>
			    <version>${hibernate.version}</version>
			</dependency>
			
			<!-- JRS-303 bean validation -->
					
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>	
			
			<!-- QuerySQL -->
			
			<dependency>
			  <groupId>com.mysema.querydsl</groupId>
			  <artifactId>querydsl-apt</artifactId>
			  <version>${querydsl.version}</version>
			  <scope>provided</scope>
			</dependency>        
			    
			<dependency>
			  <groupId>com.mysema.querydsl</groupId>
			  <artifactId>querydsl-jpa</artifactId>
			  <version>${querydsl.version}</version>
			  <exclusions>
			  	<exclusion>
			  		<groupId>org.hibernate.javax.persistence</groupId>
			  		<artifactId>hibernate-jpa-2.0-api</artifactId>
			  	</exclusion>
			  </exclusions>
			</dependency>
			
			<!-- Fix a bug using Junit and JPA -->
			
			<dependency>
			    <groupId>xml-apis</groupId>
			    <artifactId>xml-apis</artifactId>
			    <version>${xml-apis.version}</version>
			</dependency>
			
			<!-- Jersey -->
			
			<dependency>
		    	<groupId>org.glassfish.jersey.containers</groupId>
			    <artifactId>jersey-container-servlet</artifactId>
			    <version>${jersey.version}</version>
    			<scope>provided</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.glassfish.jersey.core</groupId>
			    <artifactId>jersey-server</artifactId>
			    <version>${jersey.version}</version>
			    <scope>provided</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.glassfish.jersey.core</groupId>
			    <artifactId>jersey-client</artifactId>
			    <version>${jersey.version}</version>
			    <scope>provided</scope>
			</dependency>
					
			<dependency>
			    <groupId>org.glassfish.jersey.media</groupId>
			    <artifactId>jersey-media-json-jackson</artifactId>
			    <version>${jersey.version}</version>
			    <scope>provided</scope>
			</dependency>
		
			<dependency>
			    <groupId>org.glassfish.jersey.core</groupId>
			    <artifactId>jersey-common</artifactId>
			    <version>${jersey.version}</version>
			    <scope>provided</scope>
			</dependency>
		
			<dependency>
		        <groupId>org.glassfish.jersey.ext</groupId>
		        <artifactId>jersey-spring3</artifactId>
		        <version>${jersey.version}</version>
		        <exclusions>
		            <exclusion>
		                <artifactId>spring-context</artifactId>
		                <groupId>org.springframework</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>spring-beans</artifactId>
		                <groupId>org.springframework</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>spring-core</artifactId>
		                <groupId>org.springframework</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>spring-web</artifactId>
		                <groupId>org.springframework</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>spring-webmvc</artifactId>
		                <groupId>org.springframework</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>jersey-server</artifactId>
		                <groupId>org.glassfish.jersey.core</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>jersey-container-servlet-core</artifactId>
		                <groupId>org.glassfish.jersey.containers</groupId>
		            </exclusion>
		            <exclusion>
		                <artifactId>hk2</artifactId>
		                <groupId>org.glassfish.hk2</groupId>
		            </exclusion>
		        </exclusions>
		    </dependency>
		    
		    <!-- JaxB -->
		    
		    <dependency>
			    <groupId>com.sun.xml.bind</groupId>
			    <artifactId>jaxb-core</artifactId>
			    <version>2.2.8-b01</version>
			</dependency>
			<dependency>
			    <groupId>com.sun.xml.bind</groupId>
			    <artifactId>jaxb-impl</artifactId>
			    <version>2.2-promoted-b65</version>
			</dependency>
			
			<!-- Apache Commons FileUpload --> 
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
			</dependency>
			
			<!-- Apache Commons IO --> 
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
		    
		  </dependencies>
	</dependencyManagement>
</project>